use('mongo_1');

db.createCollection('users', {
    validator: {
$jsonSchema: {
    bsonType:'object',
required: [
    'firstName',
     'lastName',
    //   'isMale', 
    //   'birthYear', 
    //   'adress', 
    //   'rating',
    //   'hobbies',
    // 'status'],
],
properties:{
    firstName:{
        bsonType:'string',
        pattern:'^[A-Z][a-z]{1,31}$',
        minLength:4,
maxLength:32,
description:'Must be string with length [4-32]'
    },
    lastName:{
        bsonType:'string',
        pattern:'^[A-Z][a-z]{1,31}$',
        minLength:2,
maxLength:32,
description:'Must be string with length [2-32]'
    },
    isMale:{
        bsonType:'bool',
        description:'Must be boolean'
    },
    birthYear:{
     bsonType:'int',
     minimum: 1900,
     maximum: new Date().getFullYear(),
     description:'Must be number 1900-2025'   
    },
    adress:{
        bsonType:'object',
        required:['city'],
        properties: {
            city:{
                bsonType:'string',
                minLength:2,
                maxLength:32,
                description:'Must be string with length [2-32]'
            },
            street:{
                bsonType:'string',
                minLength:2,
                maxLength:32,
                description:'Must be string with length [2-32]'
            },
            houseNumber:{
                bsonType:'int',
                minLength:1,
                maxLength:32,
                description:'Must be number [1-32]'
            }
        }
    },
    rating:{
        bsonType:'double',
        minimum:0,
        maximum:5

    },
    hobbies:{
        bsonType:'string',
        items: {
            bsonType:'string'
        }
    },
    status:{
bsonType:'string',
enum:['active','sleep', 'busy'],
description:'Status must be active, sleep or busy'
    },
    createdAt:{
        bsonType:'date',
        description:'Data registration'
    }
}
}
}
});
